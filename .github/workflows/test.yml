name: test

on: [push, pull_request]


jobs:

  frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:

    - name: Checkout 🛎
      uses: actions/checkout@master

    - name: Setup node env 🏗
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node }}
        check-latest: true

    - name: Cache node_modules 📦
      uses: actions/cache@v2.1.4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies 👨🏻‍💻
      run: npm ci --prefer-offline --no-audit
      working-directory: frontend

    - name: Run linter 👀
      run: npm run lint
      working-directory: frontend
  backend:
    name: Build backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v1
      with: 
        python-version: '3.9'
      # close default MySQL-Server
      - name: Shutdown default mysql
        run: sudo service mysql stop

      # run mysql server
      - name: Create mysql database auth
        uses: icomponent/mysql-action@master
        with:
          VERSION: 5.7
          CONTAINER_NAME: mysql
          PORT_MAPPING: 3306:3306
          ROOT_PASSWORD: root
          DATABASE: helpdesk

    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests with pytest
      run: pytest helpdesk/tests -W ignore::DeprecationWarning --junitxml=ci/ut-report.xml
