name: test

on: [push, pull_request]


jobs:

  frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:

    - name: Checkout 🛎
      uses: actions/checkout@master

    - name: Setup node env 🏗
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node }}
        check-latest: true

    - name: Cache node_modules 📦
      uses: actions/cache@v2.1.4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies 👨🏻‍💻
      run: npm ci --prefer-offline --no-audit
      working-directory: frontend

    - name: Run linter 👀
      run: npm run lint
      working-directory: frontend
  backend:
    name: Build backend
    runs-on: ubuntu-latest

    # Service containers mysql to run with `runner-job`
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: helpdesk
        ports:
        - 3306:3306
        options: >-
          --name=mysql 
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Check mysql
      run: |
        ps aux | grep mysql
        ls -l /var/run/mysqld

    - name: Run tests with pytest
      run: pytest helpdesk/tests -W ignore::DeprecationWarning --junitxml=ci/ut-report.xml
